name: Haskell CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-haskell@v1
      with:
        ghc-version: '8.8.2'
        cabal-version: '3.2'

#    - name: Cache
#      uses: actions/cache@v3
#      env:
#        cache-name: cache-cabal
#      with:
#        path: ~/.cabal
#        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
#        restore-keys: |
#          ${{ runner.os }}-build-${{ env.cache-name }}-
#          ${{ runner.os }}-build-
#          ${{ runner.os }}-

    - name: Install dependencies
      run: | 
        stack update
        echo "running: stack exec -- mintty -e ./.github/InstallDeps.sh"  
        $processName = "mintty"
#        $process = Start-Process -FilePath "stack" -ArgumentList "exec -- mintty -e ./.github/InstallDeps.sh" -PassThru; Start-Sleep -Seconds 120
        stack exec -- mintty -e ./.github/InstallDeps.sh
        Start-Sleep -Seconds 120
    - name: Upload Mintty Output log
      uses: actions/upload-artifact@v2
      with:
        name: mintty-output
        path: mintty_output.txt
    - name: Build
      run: |
        stack install --flag fltkhs:bundled
        stack build
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false
    - name: Copy dll libraries and exe
      run : |
        echo "running: stack exec -- mintty -e ./.github/ZipBinaries.sh"  
        stack exec -- mintty -e ./.github/ZipBinaries.sh
    - name: Upload Dlls zip
      uses: actions/upload-artifact@v2
      with:
        name: tmp
        path: tmp.zip