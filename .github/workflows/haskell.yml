name: Haskell CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions: write-all

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Zip dll libraries and exe
        shell: pwsh
        run: |
          $filePath = "tmp.txt"
          $contents = "This is the content of the file."
          Set-Content -Path $filePath -Value $contents
          # Compress the file into a ZIP archive
          $zipPath = "./tmp.zip"
          Compress-Archive -Path $filePath -DestinationPath $zipPath
          Get-ChildItem
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Mintty Output log
        uses: actions/upload-artifact@v2
        with:
          name: tmp.zip
          path: ./tmp.zip
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: tmp.zip
          asset_name: chess_downloader_v${{ github.run_number }}.zip
          asset_content_type: application/zip

