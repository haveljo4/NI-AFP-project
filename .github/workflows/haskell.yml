name: Haskell CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions: write-all

jobs:
  build-and-test-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Haskell
      - uses: actions/setup-haskell@v1.1
        with:
          ghc-version: '8.8' # Resolves to the latest point release of GHC 8.8
          cabal-version: '3.0.0.0' # Exact version of Cabal
      - name: Install dependencies
        shell: pwsh
        run: |
          Start-Sleep -Seconds 10
          stack exec -- mintty -e ./.github/InstallDepsInstallStuff.sh
          Start-Sleep -Seconds 5
          Wait-Process -Name "mintty"  -ErrorAction SilentlyContinue -Timeout 600
      - name: Upload Mintty Output log
        uses: actions/upload-artifact@v2
        with:
          name: mintty-output
          path: mintty_output.txt
      - name: Install
        shell: pwsh
        run: |
          stack install --flag fltkhs:bundled
      - name: Build
        shell: pwsh
        run: |
          stack build
      - name: Zip dll libraries and exe
        shell: pwsh
        run: |
          echo "running: stack exec -- mintty -e ./.github/ZipBinaries.sh"  
          Start-Sleep -Seconds 5
          stack exec -- mintty -e ./.github/ZipBinaries.sh
          Start-Sleep -Seconds 5
          Wait-Process -Name "mintty" -ErrorAction SilentlyContinue -Timeout 300
      - name: Test
        shell: pwsh
        run: |
          stack test
      - name: Upload Executables
        uses: actions/upload-artifact@v2
        with:
          name: chess-tool-exe
          path: chess-tool-exe.zip
      - name: Upload Mintty Output log
        uses: actions/upload-artifact@v2
        with:
          name: mintty-output-2
          path: mintty_output.txt
  create-release:
    runs-on: windows-latest
    needs: build-and-test-windows
    steps:
      - name: Download executables
        uses: actions/download-artifact@v2
        with:
          name: chess-tool-exe
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: chess-tool-exe.zip
          asset_name: chess-downloader-v${{ github.run_number }}.zip
          asset_content_type: application/zip
